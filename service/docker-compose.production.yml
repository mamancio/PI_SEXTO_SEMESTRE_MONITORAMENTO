version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: pi6dsm-postgres
    restart: always
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_DATABASE}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - pi6dsm-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME} -d ${DB_DATABASE}"]
      interval: 10s
      timeout: 5s
      retries: 5

  service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: pi6dsm-service
    restart: always
    ports:
      - "8081:8081"
    environment:
      - NODE_ENV=production
    env_file:
      - .env.production
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - pi6dsm-network

networks:
  pi6dsm-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local 